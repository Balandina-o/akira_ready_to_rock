{"version":3,"file":"main.js","mappings":"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","sources":["webpack://akira_ready_to_rock/webpack/runtime/chunk loaded","webpack://akira_ready_to_rock/./style.scss","webpack://akira_ready_to_rock/./src/resources.ts","webpack://akira_ready_to_rock/./src/main-menu/AkiraOfficialArt.ts","webpack://akira_ready_to_rock/./src/main-menu/GameLogo.ts","webpack://akira_ready_to_rock/./src/main-menu/MenuBackground.ts","webpack://akira_ready_to_rock/./src/main-menu/components/StartGameBtn.ts","webpack://akira_ready_to_rock/./src/dialogue/DialogueBackground.ts","webpack://akira_ready_to_rock/./src/main-menu.ts","webpack://akira_ready_to_rock/./src/lightning.ts","webpack://akira_ready_to_rock/./src/akira.ts","webpack://akira_ready_to_rock/./src/lightnings-factory.ts","webpack://akira_ready_to_rock/./src/level.ts","webpack://akira_ready_to_rock/./src/dlc-menu/DlcMenuBackground.ts","webpack://akira_ready_to_rock/./src/ui.ts","webpack://akira_ready_to_rock/./src/dlc-menu/AkiraDlcTempArt.ts","webpack://akira_ready_to_rock/./src/dlc-menu.ts","webpack://akira_ready_to_rock/./style.scss?80b5","webpack://akira_ready_to_rock/./src/main.ts","webpack://akira_ready_to_rock/webpack/bootstrap","webpack://akira_ready_to_rock/webpack/runtime/compat get default export","webpack://akira_ready_to_rock/webpack/runtime/define property getters","webpack://akira_ready_to_rock/webpack/runtime/global","webpack://akira_ready_to_rock/webpack/runtime/hasOwnProperty shorthand","webpack://akira_ready_to_rock/webpack/runtime/publicPath","webpack://akira_ready_to_rock/webpack/runtime/jsonp chunk loading","webpack://akira_ready_to_rock/webpack/runtime/nonce","webpack://akira_ready_to_rock/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"./node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"./node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `html,body{justify-content:center;align-items:center;position:relative;display:flex;height:100%;overflow:hidden;background-color:#000}.menu button{all:unset;cursor:pointer;font-family:\"silkscreen\";background-color:gray;border-radius:3px;box-shadow:0 4px #000}menu button:focus-visible,.menu button:hover{outline:#fff solid 1px}.menu button:active{transform:translate(0, 4px);box-shadow:0 0 #000}#game{position:absolute;left:50%}.excalibur-scale{transform-origin:0 0;transform:scale(var(--pixel-conversion), var(--pixel-conversion))}.dialog{position:absolute;font-family:\"silkscreen\";display:flex;flex-direction:column;margin-top:450px;width:100%;color:#fff;background-color:rgba(0,0,0,.8509803922);overflow:hidden;max-height:300px;transition:max-height .5s cubic-bezier(0, 1, 0, 1)}#dialog-text{padding:30px 350px 30px 30px;word-wrap:break-word;position:relative;z-index:3;height:110px;color:#fff;background-color:#1b1b1b;text-align:center;font-size:large}.expansion-hide{max-height:0;transition:max-height .5s cubic-bezier(1, 0, 1, 0)}#dialog-button-container{align-content:center;margin-left:1vw;padding:10px}.button{z-index:3;position:relative;text-align:center;border-radius:10px;color:#fff;transition:.2s linear;background:#ff0;color:#000;font-weight:bold;padding:10px 3px}.button:hover{box-shadow:0 0 0 2px #fff,0 0 0 4px #ffff9e}.menu{position:absolute;left:var(--pointer-x);top:var(--pointer-y);font-family:\"silkscreen\";display:flex;flex-direction:column;padding:5px;width:100px;color:#fff;background-color:rgba(0,0,0,.4666666667);border-radius:5px}.menu button{margin-bottom:10px}.element-hide{display:none}.element-show{display:block}.shadow{position:absolute;z-index:1;flex-direction:column;width:100%;height:100%;background-color:rgba(10,10,10,.3764705882)}`, \"\",{\"version\":3,\"sources\":[\"webpack://./style.scss\"],\"names\":[],\"mappings\":\"AAAA,UACI,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,YAAA,CACA,WAAA,CACA,eAAA,CAEA,qBAAA,CAGJ,aACI,SAAA,CACA,cAAA,CACA,wBAAA,CACA,qBAAA,CACA,iBAAA,CACA,qBAAA,CAGJ,6CACI,sBAAA,CAIJ,oBACI,2BAAA,CACA,mBAAA,CAGJ,MACI,iBAAA,CACA,QAAA,CAIJ,iBACI,oBAAA,CACA,iEAAA,CAGJ,QACI,iBAAA,CACA,wBAAA,CACA,YAAA,CACA,qBAAA,CACA,gBAAA,CACA,UAAA,CACA,UAAA,CACA,wCAAA,CAEA,eAAA,CACA,gBAAA,CACA,kDAAA,CAGJ,aACI,4BAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,YAAA,CACA,UAAA,CACA,wBAAA,CACA,iBAAA,CAEA,eAAA,CAGJ,gBACI,YAAA,CACA,kDAAA,CAGJ,yBACI,oBAAA,CACA,eAAA,CACA,YAAA,CAGJ,QACI,SAAA,CACA,iBAAA,CACA,iBAAA,CACA,kBAAA,CACA,UAAA,CACA,qBAAA,CACA,eAAA,CACA,UAAA,CACA,gBAAA,CACA,gBAAA,CAOJ,cACI,2CAAA,CAGJ,MACI,iBAAA,CAEA,qBAAA,CACA,oBAAA,CACA,wBAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CACA,WAAA,CACA,UAAA,CACA,wCAAA,CACA,iBAAA,CAKJ,aACI,kBAAA,CAGJ,cACI,YAAA,CAGJ,cACI,aAAA,CAGJ,QACI,iBAAA,CACA,SAAA,CACA,qBAAA,CACA,UAAA,CACA,WAAA,CACA,2CAAA\",\"sourcesContent\":[\"html, body {\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    position: relative;\\r\\n    display: flex;\\r\\n    height:100%;\\r\\n    overflow: hidden;\\r\\n\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n.menu button {\\r\\n    all: unset;\\r\\n    cursor: pointer;\\r\\n    font-family: 'silkscreen';\\r\\n    background-color: gray;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: 0 4px black;\\r\\n}\\r\\n\\r\\nmenu button:focus-visible,.menu button:hover {\\r\\n    outline: white solid 1px;\\r\\n    /* box-shadow: 0 4px black; */\\r\\n}\\r\\n\\r\\n.menu button:active {\\r\\n    transform: translate(0, 4px);\\r\\n    box-shadow: 0 0 black;\\r\\n}\\r\\n\\r\\n#game {\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    /* transform: translate(-50%, -50%); */\\r\\n}\\r\\n\\r\\n.excalibur-scale {\\r\\n    transform-origin: 0 0;\\r\\n    transform: scale(var(--pixel-conversion), var(--pixel-conversion));\\r\\n}\\r\\n\\r\\n.dialog {\\r\\n    position: absolute;\\r\\n    font-family: 'silkscreen';\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 450px;\\r\\n    width: 100%;\\r\\n    color: white;\\r\\n    background-color: #000000d9;\\r\\n\\r\\n    overflow: hidden;\\r\\n    max-height: 300px;\\r\\n    transition: max-height 0.5s cubic-bezier(0, 1, 0, 1);\\r\\n}\\r\\n\\r\\n#dialog-text {\\r\\n    padding: 30px 350px 30px 30px; /** Изменить отступ, орипентируясь на изображение. */\\r\\n    word-wrap: break-word;\\r\\n    position: relative;\\r\\n    z-index: 3;\\r\\n    height: 110px; /** Изменить высоту, если текст не влезет в диалоговое окно. */\\r\\n    color: #fff;\\r\\n    background-color: #1b1b1b;\\r\\n    text-align: center;\\r\\n\\r\\n    font-size: large;\\r\\n}\\r\\n\\r\\n.expansion-hide {\\r\\n    max-height: 0;\\r\\n    transition: max-height 0.5s cubic-bezier(1, 0, 1, 0);  \\r\\n}\\r\\n\\r\\n#dialog-button-container {\\r\\n    align-content: center;\\r\\n    margin-left: 1vw;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    z-index: 3;\\r\\n    position: relative;\\r\\n    text-align: center; \\r\\n    border-radius: 10px;\\r\\n    color: white;\\r\\n    transition: .2s linear;\\r\\n    background: yellow;\\r\\n    color: black;\\r\\n    font-weight: bold;\\r\\n    padding: 10px 3px;\\r\\n\\r\\n    .next {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n.button:hover {\\r\\n    box-shadow: 0 0 0 2px white, 0 0 0 4px rgb(255, 255, 158);\\r\\n}\\r\\n\\r\\n.menu {\\r\\n    position: absolute;\\r\\n    /* position menu on click */\\r\\n    left: var(--pointer-x);\\r\\n    top: var(--pointer-y);\\r\\n    font-family: 'silkscreen';\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 5px;\\r\\n    width: 100px;\\r\\n    color: white;\\r\\n    background-color: #00000077;\\r\\n    border-radius: 5px;\\r\\n    /* top: calc(10px * var(--pixel-conversion));\\r\\n    left: calc(10px * var(--pixel-conversion)); */\\r\\n}\\r\\n\\r\\n.menu button {\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.element-hide {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.element-show {\\r\\n    display: block;  \\r\\n}\\r\\n\\r\\n.shadow {\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n    flex-direction: column;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: #0a0a0a60;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/** Модель экспортирует ресурсы, задействуемые в игре. */\r\n\r\nimport {ImageSource, Loader, Sound } from \"excalibur\";\r\n\r\nimport AkiraPath from './images/josuke.png';\r\n\r\nimport akiraOfficialArtPath from './images/akira_preview.png';\r\nimport akiraDlcTempArtPath from './images/akira_dlc_temp_1.png';\r\n\r\nimport mainMenuBackgroundPath from './images/menu_background.png';\r\nimport dlcMenuBackgroundPath from './images/temple_dlc_menu_background.jpg';\r\n\r\nimport gameLogoPath from './images/game_logo.png';\r\nimport startGameBtnPath from './images/start_game_btn.png';\r\nimport startGameBtnHoverPath from './images/start_game_btn_hover.png';\r\n\r\nimport lightningPointPath from './images/lightning.png';\r\n\r\nimport backgroundMainMenuMusicPath from './sounds/rhchp_can_not_stop.ogg';\r\nimport backgroundDlcMenuMusicPath from './sounds/plenka_voltage.ogg';\r\nimport levelBackgroundMusicPath from './sounds/the_strokes_reptilia_instrumental.ogg';\r\n\r\n\r\n// It is convenient to put your resources in one place\r\nexport const Resources = {\r\n  Akira: new ImageSource(AkiraPath),\r\n  AkiraOfficialArt: new ImageSource(akiraOfficialArtPath),\r\n  AkiraDlcTempArt: new ImageSource(akiraDlcTempArtPath),\r\n  \r\n  MainMenuBackground: new ImageSource(mainMenuBackgroundPath),\r\n  DlcMenuBackground: new ImageSource(dlcMenuBackgroundPath),\r\n  // Todo Сделать что-то с фоном. Код ниже не работает {\r\n  //   wrapping: ImageWrapping.Mirror\r\n  // })\r\n\r\n  GameLogo: new ImageSource(gameLogoPath),\r\n  StartGameBtn: new ImageSource(startGameBtnPath),\r\n  StartGameBtnHover: new ImageSource(startGameBtnHoverPath),\r\n\r\n  LightningPoint: new ImageSource(lightningPointPath),\r\n  \r\n  MainMenuMusic: new Sound(backgroundMainMenuMusicPath),\r\n  DlcMenuMusic: new Sound(backgroundDlcMenuMusicPath),\r\n  LevelBackgroundMusic: new Sound(levelBackgroundMusicPath)\r\n} as const;\r\n\r\n// We build a loader and add all of our resources to the boot loader\r\n// You can build your own loader by extending DefaultLoader\r\nexport const loader = new Loader();\r\n\r\nfor (const res of Object.values(Resources)) {\r\n  loader.addResource(res);\r\n}\r\n","/** Модель экспортирует картинку с Акирой в главном меню. */\r\n\r\n// Actors are the main unit of composition you'll likely use,\r\n// anything that you want to draw and move around the screen\r\n// is likely built with an actor\r\n\r\nimport {\r\n  Actor,\r\n  Collider,\r\n  CollisionContact,\r\n  Engine,\r\n  Side,\r\n  vec\r\n} from \"excalibur\";\r\n\r\nimport { Resources } from \"../resources\";\r\nimport { game } from \"@/main\";\r\n\r\n\r\nexport class AkiraOfficialArt extends Actor {\r\n  constructor() {\r\n    super({\r\n      // Giving your actor a name is optional, but helps in debugging using the dev tools or debug mode\r\n      // https://github.com/excaliburjs/excalibur-extension/\r\n      // Chrome: https://chromewebstore.google.com/detail/excalibur-dev-tools/dinddaeielhddflijbbcmpefamfffekc\r\n      // Firefox: https://addons.mozilla.org/en-US/firefox/addon/excalibur-dev-tools/\r\n      name: 'AkiraOfficialArt',\r\n      pos: vec(0, 370),\r\n      width: 1,\r\n      height: 1,\r\n      // anchor: vec(0, 0), // Actors default center colliders and graphics with anchor (0.5, 0.5)\r\n      // collisionType: CollisionType.Active,\r\n      // Collision Type Active means this participates in collisions read more\r\n      // https://excaliburjs.com/docs/collisiontypes\r\n    });\r\n  }\r\n\r\n  override onInitialize() {\r\n    // Generally recommended to stick logic in the \"On initialize\"\r\n    // This runs before the first update\r\n    // Useful when\r\n    // 1. You need things to be loaded like Images for graphics\r\n    // 2. You need excalibur to be initialized & started \r\n    // 3. Deferring logic to run time instead of constructor time\r\n    // 4. Lazy instantiation\r\n    this.graphics.add(Resources.AkiraOfficialArt.toSprite());\r\n\r\n    // Actions are useful for scripting common behavior, for example patrolling enemies\r\n    this.actions.moveBy({ offset: vec(290, 0), durationMs: 300 })\r\n    this.actions.moveBy({ offset: vec(100, 0), durationMs: 1000 });\r\n  \r\n    this.actions.repeatForever(ctx => {\r\n      ctx.moveBy({offset: vec(0, 10), durationMs: 500});\r\n      ctx.moveBy({offset: vec(-5, 0), durationMs: 300});\r\n      ctx.moveBy({offset: vec(0, -10), durationMs: 500});\r\n      ctx.moveBy({offset: vec(5, 0), durationMs: 500});\r\n    });\r\n\r\n    // Sometimes you want to click on an actor!\r\n    this.on('pointerdown', evt => {\r\n      console.log('You clicked the actor @', evt.worldPos.toString());\r\n      Resources.MainMenuMusic.stop();\r\n      // Переходим на страницу с уровнем\r\n      // Todo Добавить анимацию\r\n      // setTimeout( () => {\r\n        game.goToScene('dlcMenu');\r\n      // }, 1000)\r\n    });\r\n  }\r\n\r\n  override onPreUpdate(engine: Engine, elapsedMs: number): void {\r\n    // Put any update logic here runs every frame before Actor builtins\r\n  }\r\n\r\n  override onPostUpdate(engine: Engine, elapsedMs: number): void {\r\n    // Put any update logic here runs every frame after Actor builtins\r\n  }\r\n\r\n  override onPreCollisionResolve(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called before a collision is resolved, if you want to opt out of this specific collision call contact.cancel()\r\n  }\r\n\r\n  override onPostCollisionResolve(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called every time a collision is resolved and overlap is solved\r\n  }\r\n\r\n  override onCollisionStart(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called when a pair of objects are in contact\r\n  }\r\n\r\n  override onCollisionEnd(self: Collider, other: Collider, side: Side, lastContact: CollisionContact): void {\r\n    // Called when a pair of objects separates\r\n  }\r\n}\r\n","/** Модель экспортирует лого игры в главном меню. */\r\n\r\nimport { Actor, vec } from \"excalibur\";\r\n\r\nimport { Resources } from \"../resources\";\r\n\r\n\r\nexport class GameLogo extends Actor {\r\n  constructor() {\r\n    super({\r\n      name: 'GameLogo',\r\n      pos: vec(720, 0),\r\n      width: 50,\r\n      height: 50\r\n    });\r\n  }\r\n\r\n  override onInitialize() {\r\n    this.graphics.add(Resources.GameLogo.toSprite());\r\n    this.actions.moveBy({ offset: vec(0, 150), durationMs: 300 })\r\n  }\r\n}\r\n","/** Модель экспортирует фон главного меню. */\r\n// Todo сделать фон интерактивным\r\n\r\nimport { Actor, vec } from \"excalibur\";\r\n\r\nimport { Resources } from \"../resources\";\r\n\r\nexport class MenuBackground extends Actor {\r\n  constructor() {\r\n    super({\r\n      name: 'MenuBackground',\r\n      pos: vec(600, 400),\r\n    });\r\n  }\r\n\r\n  override onInitialize() {\r\n    this.graphics.add(Resources.MainMenuBackground.toSprite());\r\n  }\r\n}\r\n","/** Модель экспортирует компонент кнопки старта игры. */\r\n\r\nimport { game } from \"@/main\";\r\n\r\nimport { Actor, vec } from \"excalibur\";\r\nimport { Resources } from \"../../resources\";\r\n\r\n\r\nexport class StartGameBtn extends Actor {\r\n  constructor() {\r\n    super({\r\n      name: 'StartGameBtn',\r\n      pos: vec(1500, 550),\r\n      width: 20,\r\n      height: 20\r\n    });\r\n  }\r\n\r\n  override onInitialize() {\r\n    this.graphics.add(Resources.StartGameBtn.toSprite());\r\n    this.actions.moveBy({ offset: vec(-600, 0), durationMs: 300 });\r\n\r\n    this.on('pointerenter', event => { // Обработчик события наведения на кнопку\r\n        this.graphics.add(Resources.StartGameBtnHover.toSprite());\r\n    });\r\n\r\n    this.on('pointerleave', event => { // Обработчик события потери кнопкой фокуса\r\n        this.graphics.add(Resources.StartGameBtn.toSprite());\r\n    });\r\n\r\n    this.on('pointerdown', evt => { // Обработчик события клика по кнопке\r\n        Resources.MainMenuMusic.stop();\r\n        // Переходим на страницу с уровнем\r\n        // Todo Добавить анимацию\r\n        // setTimeout( () => {\r\n          game.goToScene('level');\r\n        // }, 1000)\r\n    });\r\n  }\r\n}\r\n","import { Actor, Color, Scene, Vector, vec } from \"excalibur\";\r\n\r\nexport const calculateExPixelConversion = (screen: ex.Screen) => {\r\n    const origin = screen.worldToPageCoordinates(Vector.Zero);\r\n    const singlePixel = screen.worldToPageCoordinates(vec(1, 0)).sub(origin);\r\n    const pixelConversion = singlePixel.x;\r\n    document.documentElement.style.setProperty('--pixel-conversion', pixelConversion.toString());\r\n}\r\n\r\nexport class DialogueBackground {\r\n    messages: string[];\r\n    rootElement: HTMLElement;\r\n    nextMessageButton: HTMLElement;\r\n    skipAllMessagesButton: HTMLElement;\r\n    dialogText: HTMLElement;\r\n\r\n    shadow1: HTMLElement;\r\n\r\n    numberDialog = -1;\r\n\r\n    currentWorldPos: Vector = vec(0, 0);\r\n\r\n    constructor(public scene: Scene, messages: string[]) {\r\n        const rootElement = document.getElementById('dialog');\r\n        const nextMessageButton = document.getElementById('next-button');\r\n        const skipAllMessagesButton = document.getElementById('skip-all-button');\r\n        const dialogText = document.getElementById('dialog-text');\r\n\r\n        const shadow1 = document.getElementById('shadow-background-plug') \r\n\r\n      setTimeout( () => {\r\n          this.show();\r\n          this.anotherFunc();\r\n      }, 0)\r\n\r\n\r\n        if (rootElement && nextMessageButton && skipAllMessagesButton) {\r\n            this.rootElement = rootElement;\r\n            this.nextMessageButton = nextMessageButton;\r\n            this.skipAllMessagesButton = skipAllMessagesButton;\r\n            this.dialogText = dialogText;\r\n            this.shadow1 = shadow1;\r\n            this.messages = messages;\r\n\r\n            this.nextMessageButton.addEventListener('click', evt => {\r\n              this.anotherFunc();\r\n            });\r\n\r\n            this.skipAllMessagesButton.addEventListener('click', evt => {\r\n              this.skipAllMessages();\r\n            });\r\n\r\n\r\n            // this.removeUnitButton.addEventListener('click', evt => {\r\n\r\n            // });\r\n        } else {\r\n            throw Error(\"Could not initialize menu, element with id='menu'\");\r\n        }\r\n    }\r\n\r\nskipAllMessages(){\r\n                this.hide();\r\n}\r\n\r\nanotherFunc(){\r\n                this.dialogText.textContent = '';\r\n              this.numberDialog++;\r\n              if( this.numberDialog < this.messages.length) {\r\n                this.typeWriter()\r\n              } else {\r\n                this.hide();\r\n              }\r\n              // this.dialogText.textContent = messages[this.numberDialog];\r\n}\r\n\r\ntypeWriter() {\r\n  var i = 0;\r\n  var speed = 50;\r\n  console.log(this.messages[this.numberDialog], this.messages, this.numberDialog);\r\n  let self = this; // Preserve this\r\n  function type() {\r\n    if (i < self.messages[self.numberDialog].length) {\r\n      console.log(i, self.messages[self.numberDialog].length);\r\n      document.getElementById(\"dialog-text\").innerHTML += self.messages[self.numberDialog].charAt(i);\r\n      i++;\r\n      setTimeout(type, speed);\r\n    }\r\n  }\r\n  type();\r\n}\r\n\r\n    show() {\r\n        this.shadow1.classList.remove('element-hide')\r\n        this.rootElement.classList.remove('expansion-hide')\r\n        this.rootElement.classList.add('element-show');\r\n    }\r\n\r\n    hide() {\r\n        this.rootElement.classList.remove('element-show');\r\n        this.rootElement.classList.add('expansion-hide')\r\n        this.shadow1.classList.add('element-hide');\r\n    }\r\n    \r\n}","/** Модуль экспортирует главное меню игры. */\r\n\r\nimport {\r\n    Label,\r\n    Font,\r\n    Buttons,\r\n    Color,\r\n    DefaultLoader,\r\n    Engine,\r\n    ExcaliburGraphicsContext,\r\n    Scene,\r\n    SceneActivationContext,\r\n    WebAudio,\r\n    ScreenElement\r\n} from \"excalibur\";\r\n\r\nimport { Resources } from \"./resources\";\r\n\r\nimport { AkiraOfficialArt } from \"./main-menu/AkiraOfficialArt\";\r\nimport { GameLogo } from \"./main-menu/GameLogo\";\r\nimport { MenuBackground } from \"./main-menu/MenuBackground\";\r\nimport { StartGameBtn } from \"./main-menu/components/StartGameBtn\";\r\nimport { DialogueBackground } from \"./dialogue/DialogueBackground\";\r\nimport { game } from \"./main\";\r\n\r\nexport class MainMenu extends Scene {\r\n    startGame = new ScreenElement({\r\n        x: 0,\r\n        y: 0,\r\n        z: 2,\r\n    });\r\n\r\n    override onInitialize(engine: Engine): void {\r\n    const menuBackground = new MenuBackground();\r\n    const akiraOfficialArt = new AkiraOfficialArt();\r\n    const gameLogo = new GameLogo();\r\n    const startGameBtn = new StartGameBtn();\r\n\r\n    this.add(menuBackground); // Actors need to be added to a scene to be drawn\r\n    this.add(akiraOfficialArt);\r\n    this.add(gameLogo);\r\n    this.add(startGameBtn);\r\n\r\n    this.add(this.startGame);\r\n    }\r\n    override onPreLoad(loader: DefaultLoader): void {\r\n        // Add any scene specific resources to load\r\n    }\r\n\r\n    override onActivate(context: SceneActivationContext<unknown>): void {\r\n        // Запускаем приветственный диалог\r\n        setTimeout( () => {\r\n            new DialogueBackground(game.currentScene, [\r\n                'ПРивеТ! Это Отоиши Акира на связи, если ты запустил эту игру, то ты явно готов пошуметь и взорвать парочку сцен',\r\n                '*гитарный риф*',\r\n                'go, rockstar!!'\r\n            ]);\r\n        }, 1000 )\r\n\r\n        Resources.MainMenuMusic.loop = true;\r\n        Resources.MainMenuMusic.play();\r\n    }\r\n\r\n    override onDeactivate(context: SceneActivationContext): void {\r\n        // Called when Excalibur transitions away from this scene\r\n        // Only 1 scene is active at a time\r\n    }\r\n\r\n    override onPreUpdate(engine: Engine, elapsedMs: number): void {\r\n        // Called before anything updates in the scene\r\n    }\r\n\r\n    override onPostUpdate(engine: Engine, elapsedMs: number): void {\r\n        // Called after everything updates in the scene\r\n    }\r\n\r\n    override onPreDraw(ctx: ExcaliburGraphicsContext, elapsedMs: number): void {\r\n        // Called before Excalibur draws to the screen\r\n    }\r\n\r\n    override onPostDraw(ctx: ExcaliburGraphicsContext, elapsedMs: number): void {\r\n        // Called after Excalibur draws to the screen\r\n    }\r\n}\r\n","import { Actor, Collider, CollisionContact, Engine, Side, vec } from \"excalibur\";\r\nimport { Resources } from \"./resources\";\r\n\r\n// Actors are the main unit of composition you'll likely use, anything that you want to draw and move around the screen\r\n// is likely built with an actor\r\n\r\n// They contain a bunch of useful components that you might use\r\n// actor.transform\r\n// actor.motion\r\n// actor.graphics\r\n// actor.body\r\n// actor.collider\r\n// actor.actions\r\n// actor.pointer\r\n\r\n\r\nexport class LightningPoint extends Actor {\r\n    constructor(pos: ex.Vector) {\r\n        super({\r\n            pos,\r\n            width: 20,\r\n            height: 20,\r\n        })\r\n\r\n        this.on('exitviewport', () => this.kill());\r\n    }\r\n\r\n  override onInitialize() {\r\n    this.graphics.add(Resources.LightningPoint.toSprite());\r\n    this.actions.moveBy({offset: vec(0, 1000), durationMs: 6000});\r\n\r\n    this.on('pointerdown', evt => {\r\n      console.log('You clicked the actor @', evt.worldPos.toString());\r\n    });\r\n  }\r\n\r\n  override onPreUpdate(engine: Engine, elapsedMs: number): void {\r\n    // Put any update logic here runs every frame before Actor builtins\r\n  }\r\n\r\n  override onPostUpdate(engine: Engine, elapsedMs: number): void {\r\n    // Put any update logic here runs every frame after Actor builtins\r\n  }\r\n\r\n  override onPreCollisionResolve(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called before a collision is resolved, if you want to opt out of this specific collision call contact.cancel()\r\n  }\r\n\r\n  override onPostCollisionResolve(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called every time a collision is resolved and overlap is solved\r\n  }\r\n\r\n  override onCollisionStart(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called when a pair of objects are in contact\r\n  }\r\n\r\n  override onCollisionEnd(self: Collider, other: Collider, side: Side, lastContact: CollisionContact): void {\r\n    // Called when a pair of objects separates\r\n  }\r\n}\r\n","/** Игровая моделька Акиры. */\r\n\r\nimport * as ex from \"excalibur\";\r\n\r\nimport { Resources } from \"./resources\";\r\nimport { MyLevel } from \"./level\";\r\nimport { LightningPoint } from \"./lightning\";\r\n\r\n\r\nexport class Akira extends ex.Actor {\r\n    playing = false;\r\n    jumping = false;\r\n    startSprite!: ex.Sprite;\r\n    leftAnimation!: ex.Animation;\r\n    rightAnimation!: ex.Animation;\r\n\r\n    constructor(private level: MyLevel) {\r\n        super({\r\n            name: 'UltraSuperGuitarist',\r\n            width: 20,\r\n            height: 20,\r\n            pos: ex.vec(150, 550)\r\n        });\r\n    }\r\n\r\n    override onInitialize(): void {\r\n        const spriteSheet = ex.SpriteSheet.fromImageSource({\r\n            image: Resources.Akira,\r\n            grid: {\r\n                rows: 8,\r\n                columns: 9,\r\n                spriteWidth: 25,\r\n                spriteHeight: 65,\r\n            }\r\n        });\r\n\r\n        this.startSprite = spriteSheet.getSprite(1, 0);\r\n        this.leftAnimation = ex.Animation.fromSpriteSheet(spriteSheet, [3, 4, 5, 6, 7], 100);\r\n        this.rightAnimation = ex.Animation.fromSpriteSheet(spriteSheet, [3, 4, 5, 6, 7], 100);\r\n        \r\n        // Register\r\n        this.graphics.add(\"left\", this.leftAnimation);\r\n        this.graphics.add(\"right\", this.rightAnimation);\r\n        // this.graphics.add('up', this.upAnimation);\r\n        this.graphics.add('start', this.startSprite);\r\n\r\n        this.graphics.use('start');\r\n\r\n    }\r\n\r\n    private isInputActive(engine: ex.Engine) {\r\n        return (engine.input.keyboard.isHeld(ex.Keys.Space) ||\r\n                engine.input.pointers.isDown(0))\r\n    }\r\n\r\n\r\n // After main update, once per frame execute this code\r\n override onPreUpdate(engine: ex.Engine, delta: number) {\r\n    // Reset x velocity\r\n    this.vel.x = 0;\r\n\r\n}\r\n\r\noverride onCollisionStart(_self: ex.Collider, other: ex.Collider): void {\r\n    if (other.owner instanceof LightningPoint ) {\r\n        this.level.incrementScore();\r\n        other.owner.kill();\r\n    }\r\n}\r\n\r\n    override onPostUpdate(engine: ex.Engine): void {\r\n        if (!this.playing) return; // если false, то ничего не делать =)\r\n\r\n           // Player input\r\n    if(engine.input.keyboard.isHeld(ex.Keys.Left)) { //.wasPressed\r\n        //console.log('1111111111111111');\r\n        this.vel.x = -150;\r\n    }\r\n\r\n    if(engine.input.keyboard.isHeld(ex.Keys.Right)) {\r\n       // console.log('2222222222');\r\n        this.vel.x = 150;\r\n    }\r\n    }\r\n\r\n    start() {\r\n        this.playing = true;\r\n    }\r\n\r\n    reset() {\r\n        this.stop();\r\n    }\r\n\r\n    stop() {\r\n        this.playing = false;\r\n        this.vel = ex.vec(0, 0);\r\n        this.acc = ex.vec(0, 0);\r\n    }\r\n\r\n}","import * as ex from \"excalibur\";\r\n\r\nimport { MyLevel } from \"./level\";\r\nimport { LightningPoint } from \"./lightning\";\r\n\r\nexport class LightningsFactory {\r\n\r\n    private timer: ex.Timer;\r\n    constructor(\r\n        private level: MyLevel,\r\n        private random: ex.Random,\r\n        intervalMs: number) {\r\n            this.timer = new ex.Timer({\r\n                interval: intervalMs,\r\n                repeats: true,\r\n                action: () => this.spawnLightnings()\r\n            });\r\n            this.level.add(this.timer);\r\n    }\r\n\r\n    spawnLightnings() {\r\n        const randomLightningPosition = this.random.floating(0, 3000);\r\n        const lightning = new LightningPoint(ex.vec(randomLightningPosition, 0));\r\n        this.level.add(lightning);\r\n    }\r\n\r\n    start() {\r\n        this.timer.start();\r\n    }\r\n\r\n    reset() {\r\n        for (const actor of this.level.actors) {\r\n            if (actor instanceof LightningPoint\r\n            ) {\r\n                actor.kill();\r\n            }\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this.timer.stop();\r\n        for (const actor of this.level.actors) {\r\n            if (actor instanceof LightningPoint \r\n            ) {\r\n                actor.vel = ex.vec(0, 0);\r\n            }\r\n        }\r\n    }\r\n}","import { DefaultLoader, Random, Engine, ExcaliburGraphicsContext, Scene, SceneActivationContext, vec, Label, Font, Color } from \"excalibur\";\r\nimport { Resources } from \"./resources\";\r\nimport { Akira } from \"./akira\";\r\nimport { LightningsFactory } from \"./lightnings-factory\";\r\nimport { LightningPoint } from \"./lightning\";\r\n\r\nexport class MyLevel extends Scene {\r\n\r\n    akira = new Akira(this);\r\n    random = new Random();\r\n    lightningFactory = new LightningsFactory(this, this.random, 600);\r\n\r\n    score: number = 0;\r\n    best: number = 0;\r\n    scoreLabel = new Label({\r\n        text: 'Score: 0',\r\n        x: 0,\r\n        y: 0,\r\n        z: 1,\r\n        font: new Font({\r\n            size: 20,\r\n            color: Color.Black\r\n        })\r\n    });\r\n\r\n    showStartInstructions() {\r\n        this.akira.start();\r\n        this.lightningFactory.start();\r\n    }\r\n\r\n    override onInitialize(engine: Engine): void {\r\n        const akira = new Akira( this );\r\n\r\n        const lil = new LightningPoint(vec(150, 0));\r\n        this.add(lil);\r\n\r\n        this.add(this.akira);\r\n        this.add(this.scoreLabel);\r\n\r\n        this.showStartInstructions();\r\n    }\r\n\r\n    incrementScore() {\r\n        this.scoreLabel.text = `Score: ${++this.score}`;\r\n    }\r\n\r\n    override onPreLoad(loader: DefaultLoader): void {\r\n        // Add any scene specific resources to load\r\n        // Resources.MainMenuMusic.stop();\r\n    }\r\n\r\n    override onActivate(context: SceneActivationContext<unknown>): void {\r\n        // Called when Excalibur transitions to this scene\r\n        // Only 1 scene is active at a time\r\n        Resources.LevelBackgroundMusic.loop = true;\r\n        Resources.LevelBackgroundMusic.play();\r\n    }\r\n\r\n    override onDeactivate(context: SceneActivationContext): void {\r\n        // Called when Excalibur transitions away from this scene\r\n        // Only 1 scene is active at a time\r\n    }\r\n\r\n    override onPreUpdate(engine: Engine, elapsedMs: number): void {\r\n        // Called before anything updates in the scene\r\n    }\r\n\r\n    override onPostUpdate(engine: Engine, elapsedMs: number): void {\r\n        // Called after everything updates in the scene\r\n    }\r\n\r\n    override onPreDraw(ctx: ExcaliburGraphicsContext, elapsedMs: number): void {\r\n        // Called before Excalibur draws to the screen\r\n    }\r\n\r\n    override onPostDraw(ctx: ExcaliburGraphicsContext, elapsedMs: number): void {\r\n        // Called after Excalibur draws to the screen\r\n    }\r\n}","/** Модель экспортирует фон главного меню. */\r\n// Todo сделать фон интерактивным\r\n\r\nimport { Actor, vec } from \"excalibur\";\r\n\r\nimport { Resources } from \"../resources\";\r\n\r\nexport class DlcMenuBackground extends Actor {\r\n  constructor() {\r\n    super({\r\n      name: 'DlcMenuBackground',\r\n      pos: vec(600, 400),\r\n    });\r\n  }\r\n\r\n  override onInitialize() {\r\n    this.graphics.add(Resources.DlcMenuBackground.toSprite());\r\n  }\r\n}\r\n","import { Actor, Color, Scene, Vector, vec } from \"excalibur\";\r\n\r\nexport const calculateExPixelConversion = (screen: ex.Screen) => {\r\n    const origin = screen.worldToPageCoordinates(Vector.Zero);\r\n    const singlePixel = screen.worldToPageCoordinates(vec(1, 0)).sub(origin);\r\n    const pixelConversion = singlePixel.x;\r\n    document.documentElement.style.setProperty('--pixel-conversion', pixelConversion.toString());\r\n}\r\n\r\nexport class Menu {\r\n    rootElement: HTMLElement;\r\n    addUnitButton: HTMLElement;\r\n    removeUnitButton: HTMLElement;\r\n    currentWorldPos: Vector = vec(0, 0);\r\n    constructor(public scene: Scene) {\r\n        scene.input.pointers.on('down', (evt) => {\r\n            this.show();\r\n            this.currentWorldPos = scene.engine.screen.pageToWorldCoordinates(vec(evt.pagePos.x, evt.pagePos.y));\r\n            document.documentElement.style.setProperty('--pointer-x', evt.pagePos.x.toString() + 'px');\r\n            document.documentElement.style.setProperty('--pointer-y', evt.pagePos.y.toString() + 'px');\r\n        });\r\n\r\n        const rootElement = document.getElementById('menu');\r\n        const addUnitButton = document.getElementById('add-unit');\r\n        const removeUnitButton = document.getElementById('remove-unit');\r\n\r\n        if (rootElement && addUnitButton && removeUnitButton) {\r\n            this.rootElement = rootElement;\r\n            this.addUnitButton = addUnitButton;\r\n            this.removeUnitButton = removeUnitButton;\r\n\r\n            this.addUnitButton.addEventListener('click', evt => {\r\n                this.addUnit();\r\n            });\r\n\r\n            this.removeUnitButton.addEventListener('click', evt => {\r\n                this.removeUnit();\r\n            });\r\n        } else {\r\n            throw Error(\"Could not initialize menu, element with id='menu'\");\r\n        }\r\n    }\r\n\r\n    addUnit() {\r\n        const actor = new Actor({\r\n            pos: this.currentWorldPos,\r\n            scale: vec(2, 2),\r\n            color: Color.Red\r\n        });\r\n        this.scene.add(actor);\r\n        this.hide();\r\n    }\r\n    \r\n    removeUnit() {\r\n        for (let actor of this.scene.actors) {\r\n            if (actor.graphics.bounds.contains(this.currentWorldPos)) {\r\n                actor.kill();\r\n            }\r\n        }\r\n        this.hide();\r\n    }\r\n\r\n    show() {\r\n        this.rootElement.classList.remove('hide');\r\n        this.rootElement.classList.add('show');\r\n    }\r\n\r\n    hide() {\r\n        this.rootElement.classList.remove('show');\r\n        this.rootElement.classList.add('hide');\r\n    }\r\n}","/** Модель экспортирует картинку с Акирой в главном меню. */\r\n\r\n// Actors are the main unit of composition you'll likely use,\r\n// anything that you want to draw and move around the screen\r\n// is likely built with an actor\r\n\r\nimport {\r\n  Actor,\r\n  Collider,\r\n  CollisionContact,\r\n  Engine,\r\n  ScreenElement,\r\n  Side,\r\n  vec\r\n} from \"excalibur\";\r\n\r\nimport { Resources } from \"../resources\";\r\nimport { game } from \"@/main\";\r\n\r\n\r\nexport class AkiraDlcTempArt extends ScreenElement {\r\n  constructor() {\r\n    super({\r\n      name: 'AkiraDlcTempArt',\r\n      x: -580,\r\n      y: -100,\r\n    });\r\n  }\r\n\r\n  override onInitialize() {\r\n    // Generally recommended to stick logic in the \"On initialize\"\r\n    // This runs before the first update\r\n    // Useful when\r\n    // 1. You need things to be loaded like Images for graphics\r\n    // 2. You need excalibur to be initialized & started \r\n    // 3. Deferring logic to run time instead of constructor time\r\n    // 4. Lazy instantiation\r\n    this.graphics.add(Resources.AkiraDlcTempArt.toSprite());\r\n\r\n    // Actions are useful for scripting common behavior, for example patrolling enemies\r\n    this.actions.moveBy({ offset: vec(290, 0), durationMs: 300 })\r\n    // this.actions.moveBy({ offset: vec(100, 0), durationMs: 1000 });\r\n  \r\n    this.actions.repeatForever(ctx => {\r\n      ctx.moveBy({offset: vec(0, 10), durationMs: 500});\r\n      ctx.moveBy({offset: vec(-5, 0), durationMs: 300});\r\n      ctx.moveBy({offset: vec(0, -10), durationMs: 500});\r\n      ctx.moveBy({offset: vec(5, 0), durationMs: 500});\r\n    });\r\n\r\n    // Sometimes you want to click on an actor!\r\n    this.on('pointerdown', evt => {\r\n      console.log('You clicked the actor @', evt.worldPos.toString());\r\n      Resources.MainMenuMusic.stop();\r\n      // Переходим на страницу с уровнем\r\n      // Todo Добавить анимацию\r\n      // setTimeout( () => {\r\n        game.goToScene('dlcMenu');\r\n      // }, 1000)\r\n    });\r\n  }\r\n\r\n  override onPreUpdate(engine: Engine, elapsedMs: number): void {\r\n    // Put any update logic here runs every frame before Actor builtins\r\n  }\r\n\r\n  override onPostUpdate(engine: Engine, elapsedMs: number): void {\r\n    // Put any update logic here runs every frame after Actor builtins\r\n  }\r\n\r\n  override onPreCollisionResolve(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called before a collision is resolved, if you want to opt out of this specific collision call contact.cancel()\r\n  }\r\n\r\n  override onPostCollisionResolve(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called every time a collision is resolved and overlap is solved\r\n  }\r\n\r\n  override onCollisionStart(self: Collider, other: Collider, side: Side, contact: CollisionContact): void {\r\n    // Called when a pair of objects are in contact\r\n  }\r\n\r\n  override onCollisionEnd(self: Collider, other: Collider, side: Side, lastContact: CollisionContact): void {\r\n    // Called when a pair of objects separates\r\n  }\r\n}\r\n","/** Модуль экспортирует главное меню игры. */\r\n\r\nimport {\r\n    Label,\r\n    Font,\r\n    Buttons,\r\n    Color,\r\n    DefaultLoader,\r\n    Engine,\r\n    ExcaliburGraphicsContext,\r\n    Scene,\r\n    SceneActivationContext,\r\n    WebAudio,\r\n    ScreenElement\r\n} from \"excalibur\";\r\n\r\nimport { Resources } from \"./resources\";\r\n\r\nimport { GameLogo } from \"./main-menu/GameLogo\";\r\nimport { DlcMenuBackground } from \"./dlc-menu/DlcMenuBackground\";\r\nimport { StartGameBtn } from \"./main-menu/components/StartGameBtn\";\r\nimport { Menu } from \"./ui\";\r\nimport { game } from \"./main\";\r\nimport { AkiraDlcTempArt } from \"./dlc-menu/AkiraDlcTempArt\";\r\n\r\nexport class DlcMenu extends Scene {\r\n    startGame = new ScreenElement({\r\n        x: 0,\r\n        y: 0,\r\n        z: 2,\r\n    });\r\n\r\n    override onInitialize(engine: Engine): void {\r\n    const menuBackground = new DlcMenuBackground();\r\n    const akiraOfficialArt = new AkiraDlcTempArt();\r\n    const gameLogo = new GameLogo();\r\n    const startGameBtn = new StartGameBtn();\r\n\r\n    this.add(menuBackground); // Actors need to be added to a scene to be drawn\r\n    this.add(gameLogo);\r\n    this.add(akiraOfficialArt);\r\n    this.add(startGameBtn);\r\n\r\n    this.add(this.startGame);\r\n    }\r\n    override onPreLoad(loader: DefaultLoader): void {\r\n        // Add any scene specific resources to load\r\n    }\r\n\r\n    override onActivate(context: SceneActivationContext<unknown>): void {\r\n        const menu = new Menu(game.currentScene);\r\n        Resources.DlcMenuMusic.loop = true;\r\n        Resources.DlcMenuMusic.play();\r\n    }\r\n\r\n    override onDeactivate(context: SceneActivationContext): void {\r\n        // Called when Excalibur transitions away from this scene\r\n        // Only 1 scene is active at a time\r\n    }\r\n\r\n    override onPreUpdate(engine: Engine, elapsedMs: number): void {\r\n        // Called before anything updates in the scene\r\n    }\r\n\r\n    override onPostUpdate(engine: Engine, elapsedMs: number): void {\r\n        // Called after everything updates in the scene\r\n    }\r\n\r\n    override onPreDraw(ctx: ExcaliburGraphicsContext, elapsedMs: number): void {\r\n        // Called before Excalibur draws to the screen\r\n    }\r\n\r\n    override onPostDraw(ctx: ExcaliburGraphicsContext, elapsedMs: number): void {\r\n        // Called after Excalibur draws to the screen\r\n    }\r\n}\r\n","\n      import API from \"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!./node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!./node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!./node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!./node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","/** Точка входа в программу, базовые настройки игры. */\r\n// Goal is to keep main.ts small and just enough to configure the engine\r\n\r\nimport ex, {\r\n  Color,\r\n  DisplayMode,\r\n  Engine,\r\n  FadeInOut,\r\n  SolverStrategy\r\n} from \"excalibur\";\r\n\r\nimport { loader } from \"./resources\";\r\nimport { MainMenu } from \"./main-menu\";\r\nimport { MyLevel } from \"./level\";\r\nimport { DlcMenu } from \"./dlc-menu\";\r\nimport { Menu } from \"./ui\";\r\n\r\nimport '../style.scss'\r\n\r\n\r\nexport const game = new Engine({\r\n  width: 1200, // the width of the canvas\r\n  height: 760, // the height of the canvas\r\n  backgroundColor: Color.fromHex('f6acfc'), // Мигание\r\n  displayMode: DisplayMode.Fixed, // the display mode\r\n    pixelArt: true, // pixelArt will turn on the correct settings to render pixel art \r\n    // without jaggies or shimmering artifacts\r\n    scenes: {\r\n        mainMenu: {\r\n          scene: MainMenu,\r\n        },\r\n        dlcMenu: {\r\n          scene: DlcMenu,\r\n          transitions: {\r\n            in: new FadeInOut({duration: 500, direction: 'in', color: Color.Black}),\r\n            out: new FadeInOut({duration: 500, direction: 'out', color: Color.Black})\r\n          }\r\n        },\r\n        level: {\r\n          scene: MyLevel,\r\n          transitions: {\r\n            in: new FadeInOut({duration: 500, direction: 'in', color: Color.Black}),\r\n            out: new FadeInOut({duration: 500, direction: 'out', color: Color.Black})\r\n          }\r\n        }\r\n      },\r\n    physics: {\r\n        solver: SolverStrategy.Realistic,\r\n        substep: 5 // Sub step the physics simulation for more robust simulations\r\n    },\r\n    // fixedUpdateTimestep: 16\r\n    // Turn on fixed update timestep when consistent physic simulation is important\r\n});\r\n\r\ngame.start('mainMenu', { // name of the start scene 'start'\r\n    loader, // Optional loader (but needed for loading images/sounds)\r\n    inTransition: new FadeInOut({ // Optional in transition\r\n        duration: 800,\r\n        direction: 'in',\r\n        color: Color.ExcaliburBlue // Мигание\r\n    }),\r\n}).then(() => {\r\n    // Что-то можно сделать после старта\r\n});\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkakira_ready_to_rock\"] = self[\"webpackChunkakira_ready_to_rock\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [345], () => (__webpack_require__(837)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","___CSS_LOADER_EXPORT___","push","module","id","Resources","Akira","AkiraOfficialArt","AkiraDlcTempArt","MainMenuBackground","DlcMenuBackground","GameLogo","StartGameBtn","StartGameBtnHover","LightningPoint","MainMenuMusic","DlcMenuMusic","LevelBackgroundMusic","loader","res","Object","values","addResource","constructor","super","name","pos","width","height","onInitialize","this","graphics","add","toSprite","actions","moveBy","offset","durationMs","repeatForever","ctx","on","evt","console","log","worldPos","toString","stop","game","goToScene","onPreUpdate","engine","elapsedMs","onPostUpdate","onPreCollisionResolve","self","other","side","contact","onPostCollisionResolve","onCollisionStart","onCollisionEnd","lastContact","MenuBackground","event","DialogueBackground","scene","messages","numberDialog","currentWorldPos","rootElement","document","getElementById","nextMessageButton","skipAllMessagesButton","dialogText","shadow1","setTimeout","show","anotherFunc","Error","addEventListener","skipAllMessages","hide","textContent","length","typeWriter","i","type","innerHTML","charAt","classList","remove","MainMenu","startGame","x","y","z","menuBackground","akiraOfficialArt","gameLogo","startGameBtn","onPreLoad","onActivate","context","currentScene","loop","play","onDeactivate","onPreDraw","onPostDraw","kill","level","playing","jumping","spriteSheet","fromImageSource","image","grid","rows","columns","spriteWidth","spriteHeight","startSprite","getSprite","leftAnimation","fromSpriteSheet","rightAnimation","use","isInputActive","input","keyboard","isHeld","Space","pointers","isDown","delta","vel","_self","owner","incrementScore","Left","Right","start","reset","acc","LightningsFactory","random","intervalMs","timer","interval","repeats","action","spawnLightnings","randomLightningPosition","floating","lightning","actor","actors","MyLevel","akira","lightningFactory","score","best","scoreLabel","text","font","size","color","Black","showStartInstructions","lil","Menu","screen","pageToWorldCoordinates","pagePos","documentElement","style","setProperty","addUnitButton","removeUnitButton","addUnit","removeUnit","scale","Red","bounds","contains","DlcMenu","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","backgroundColor","fromHex","displayMode","Fixed","pixelArt","scenes","mainMenu","dlcMenu","transitions","in","duration","direction","out","physics","solver","Realistic","substep","inTransition","ExcaliburBlue","then","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","replace","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","forEach","bind","nc","__webpack_exports__"],"sourceRoot":""}